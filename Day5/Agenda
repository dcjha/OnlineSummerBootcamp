Recursion

factorial
increasing
decreasing
single call -> stack
power //optimise
toh




f4 = 4*3*2*1 = 4*f3

f3 = 3*2*1









recursion:


funtion f1 (){

    f1();
    f1();

}


main(){

f1();

}







X^n = X* X^(n-1)




6^3 = 6*6^2
        =6*6^1
           =6*6^0




















|______________|
|______________|
|______________|
|______________|
|______________| 
|printArray     | 
|_____main______| L66 //halt puse



|______________|
|______________|
|______________|
|______________|
|______________|
|______________|
|______________|

